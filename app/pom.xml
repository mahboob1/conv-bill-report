<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.intuit.v4.billingcomm-orderprocess</groupId>
  <artifactId>conv-bill-hist-app</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <url>https://github.intuit.com/billingcommorderprocess/conv-bill-hist.git</url>
  <organization>
    <name>Intuit, Inc. :: billingcommorderprocess :: conv-bill-hist</name>
    <url>https://github.intuit.com/billingcommorderprocess</url>
  </organization>
  <name>Services Platform Spring Boot Examples - Hello World Boot - Service</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring.boot.maven.plugin.version>2.1.9.RELEASE</spring.boot.maven.plugin.version>
    <java.version>1.8</java.version>
    <jskbom.version>2.8.7</jskbom.version>
    <openapi.version>1.3.9</openapi.version>
    <start-class>com.intuit.v4.billingcommorderprocess.convbillhistapp.ConvBillHistApplication</start-class>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <maven-cucumber-version>3.8.0</maven-cucumber-version>
    <maven-compiler.version>3.6.0</maven-compiler.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>2.22.2</maven-surefire-report-plugin.version>
    <karate.version>0.9.5</karate.version>
    <micrometer.version>1.3.6</micrometer.version>
    <ojdbc.version>12.2.0.1</ojdbc.version>
    <xhtmlrenderer.version>9.1.20</xhtmlrenderer.version>
    <jsoup.version>1.13.1</jsoup.version>
    <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
    <central.repo>https://nexus.intuit.com/nexus/content/groups/public</central.repo>
    <fallback.repo>https://nexus.intuit.net/nexus/content/groups/public</fallback.repo>
    <gatling-plugin.version>3.0.2</gatling-plugin.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.intuit.platform.jsk</groupId>
      <artifactId>jsk-spring-boot-starter-mvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.jdbc</groupId>
      <artifactId>ojdbc8</artifactId>
      <version>${ojdbc.version}</version>
    </dependency>
    <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>
    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-core</artifactId>
      <version>${xhtmlrenderer.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-pdf-openpdf</artifactId>
      <version>${xhtmlrenderer.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.13.1</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>${micrometer.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-apache</artifactId>
      <version>${karate.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-junit4</artifactId>
      <version>${karate.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-gatling</artifactId>
      <version>${karate.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.masterthought</groupId>
      <artifactId>maven-cucumber-reporting</artifactId>
      <version>${maven-cucumber-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.ctg.devgru.test</groupId>
      <artifactId>api-test-starter</artifactId>
      <version>1.0.4</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.java</groupId>
      <artifactId>sonar-jacoco-listeners</artifactId>
      <version>3.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.ctg.tools</groupId>
      <artifactId>perf-utils</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.platform.jsk</groupId>
      <artifactId>jsk-mesh-autoconfig</artifactId>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.intuit.platform.jsk</groupId>
        <artifactId>jsk-bom</artifactId>
        <version>${jskbom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </execution>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>true</executable>
          <finalName>${project.artifactId}</finalName>
          <includeSystemScope>true</includeSystemScope>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
          <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
          <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <includes>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
            <include>**/*TestCase.java</include>
          </includes>
          <useFile>true</useFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>never</phase>
          </execution>
        </executions>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <preparationGoals>clean</preparationGoals>
          <arguments>-s settings.xml</arguments>
          <goals>clean deploy</goals>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>unit</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <excludes>
                <exclude>karate/KarateTestBase.java</exclude>
                <exclude>karate/ApiMockRunner.java</exclude>
                <exclude>karate/KarateTestParallel.java</exclude>
              </excludes>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>karate</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <includes>
                <include>karate/KarateTestParallel.java</include>
              </includes>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <configuration>
                  <destFile>${project.build.directory}/jacoco-it/jacoco-it.exec</destFile>
                </configuration>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>test</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-it/jacoco-it.exec</dataFile>
                  <outputDirectory>${project.build.directory}/jacoco-it/</outputDirectory>
                </configuration>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mock</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <includes>
                <include>karate/ApiMockRunner.java</include>
              </includes>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <configuration>
                  <destFile>${project.build.directory}/jacoco-it/jacoco-it.exec</destFile>
                </configuration>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>test</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-it/jacoco-it.exec</dataFile>
                  <outputDirectory>${project.build.directory}/jacoco-it/</outputDirectory>
                </configuration>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>perf</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/java</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler.version}</version>
            <configuration>
              <encoding>UTF-8</encoding>
              <source>${java.version}</source>
              <target>${java.version}</target>
              <compilerArgument>-Werror</compilerArgument>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-maven-plugin</artifactId>
            <version>${gatling-plugin.version}</version>
            <configuration>
              <simulationsFolder>src/test/scala/simulations</simulationsFolder>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  	<profile>
		<id>karate-remote</id>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
		<build>
			<testResources>
				<testResource>
					<directory>src/test/java</directory>
				</testResource>
				<testResource>
					<directory>src/test/resources</directory>
				</testResource>
			</testResources>
			<plugins>
				<plugin>
					<groupId>com.intuit.ctg.qe</groupId>
					<artifactId>jacoco-service-maven-plugin</artifactId>
					<version>1.0.4</version>
					<configuration>
						<!-- Jacoco agent is only attached in the QAL environment.
                            Corresponding Jacoco service is enabled in the QAL namespace for collecting the jacoco exec file.
                            Changing this to any other environment would require deployment changes-->
						<hostname>${jacocoServiceEndpoint}</hostname>
						<hostnames>
							<!-- The list of hostname(s) you would like to dump the JaCoCo exec data from -->
							<hostname>${kubernetesServiceName}</hostname>
						</hostnames>
						<reset>true</reset> <!-- Flag to reset or not -->
					</configuration>
					<executions>
						<execution>
							<id>run</id>
							<goals>
								<goal>postrequest</goal> <!-- Async post to get the request -->
								<goal>getstatus</goal> <!-- Blocking call to wait until the request is complete -->
								<goal>getrequest
								</goal> <!-- Download the JaCoCo Exec file so that we can generate the report -->
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<title>${project.name} for ${project.groupId}:${project.artifactId}:${project.version}
						</title>
						<footer>&copy;2017 Intuit, Inc. Generated ${maven.build.timestamp}</footer>
						<includes>
							<include>com/intuit/**/*</include> <!-- Only include Intuit packages in the report. -->
						</includes>
						<dataFile>${basedir}/target/jacoco-it.exec</dataFile>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-report-integration-test</id>
							<phase>verify</phase>
							<goals>
								<goal>report-integration</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<!--<include>karate/KarateTestBase.java</include>-->
							<include>karate/KarateTestParallel.java</include>
						</includes>
						<properties>
							<property>
								<name>listener</name>
								<value>org.sonar.java.jacoco.JUnitListener</value>
							</property>
						</properties>
					</configuration>
				</plugin>
			</plugins>
		</build>
		</profile>
</profiles>
  <scm>
    <connection>scm:git:https://github.intuit.com/billingcommorderprocess/conv-bill-hist.git</connection>
    <developerConnection>scm:git:https://github.intuit.com/billingcommorderprocess/conv-bill-hist.git</developerConnection>
    <url>https://github.intuit.com/billingcommorderprocess/conv-bill-hist</url>
    <tag>HEAD</tag>
  </scm>
  <repositories>
    <repository>
      <id>central-repo</id>
      <url>${central.repo}</url>
      <name>Intuit Nexus Cache</name>
    </repository>
    <repository>
      <id>fallback-repo</id>
      <url>${fallback.repo}</url>
      <name>Intuit Nexus Home</name>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>central-plugin-repo</id>
      <url>${central.repo}</url>
      <name>Intuit Nexus Cache (plugins)</name>
    </pluginRepository>
    <pluginRepository>
      <id>fallback-plugin-repo</id>
      <url>${fallback.repo}</url>
      <name>Intuit Nexus Home (plugins)</name>
    </pluginRepository>
  </pluginRepositories>
  <distributionManagement>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>scm.dev.snap.repo</id>
      <name>SNAPSHOT REPO</name>
      <url>https://nexus.intuit.com/nexus/content/repositories/Intuit.CTO-Snapshots</url>
      <layout>default</layout>
    </snapshotRepository>
    <repository>
      <id>scm.int.rel.repo</id>
      <name>RELEASE REPO</name>
      <url>https://nexus.intuit.com/nexus/content/repositories/Intuit.CTO-Releases</url>
      <layout>default</layout>
    </repository>
  </distributionManagement>
</project>
